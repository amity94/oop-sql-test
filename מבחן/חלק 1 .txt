1. נתונות המחלקות הבאות
Animal, Dog, Cat, SiamiCat, Buldog, Bird
1.1 מי יורש ממי?
2.1 האם כדאי להפוך את מחלקת Animal לאבסטרקטית? מדוע?

1.1 dog, cat ו-bird יורשים מ-animal.
SiamiCat יורש מ-cat.
Buldog יורש מ-dog.

1.2 כדאי להפוך את מחלקת animal לאבסרקטית, כדי להימנע משכפול קוד ולעבוד בצורה יותר הגיונית, כך נוכל לשלוט בתוכן הפונקציות בצורה יותר מדויקת לגבי כל אחת מהמחלקות היורשות.

2 .האם ניתן בדוט נט לרשת יותר ממחלקה אחת? מדוע לדעתך?
2.כן, אפשר לרשת מיותר ממחלקה אחת בדודנט. מחלקות מסוימות נותנות פונקציולנויות שונות למחלקה היורשת, כמו למשל icomparable שמאפשרת מיון במחקה ו-ienumerable שמאפשרת איטרציה.

3 .האם ניתן בדוט נט לרשת יותר מאינטרפייס אחד?
3.כן

4 .האם במחלקה לא אבסטרקטית ניתן להצהיר על מתודה אבסטרקטית?
4. לא.

5 .האם במחלקה אבסטרקטית ניתן לכתוב פונקציה לא-אבסטרקטית?
5. כן.

6 .האם באינטרפייס ניתן לכתוב פונקציה לא אבסטרקטית?
6. לא, באינטרפייס מזינים רק חתימות של פונקציות, משמע אבסטרקטיות, ללא גוף או תוכן.

7 .האם כל המתודות באינטרפייס הם public?האם ניתן לכתוב modifier access באינטרפייס?
7. כל המתודות באינטרפייס הן public, כן. לא ניתן לכתוב access modifier באינטרפייס.

8. הסבר את ההבדל בין public, private, protected, internal.
public - כולם יכולים לגשת למשהו שמוגדר ב-public, בפרויקט ומחוצה לו.
Private - אפשר לגשת רק באותה מחלקה, לא במחלקות אחרות, לא ביורשות, ולא בפרויקט אחר.
internal - אפשר לגשת רק באותו פרויקט, ז"א באותה מחלקה, במחלקות היורשות ובמחלקות אחרות.
Protected - אפשר לגשת רק במחלקה עצמה וביורשות, גם מחוץ לפרויקט. לא במחלקות שונות.

9 .אם הצהרתי על פונקציה כ virtual האם חובה לממש אותה בבנים היורשים?
האם חובה לממש את כל הפונקציות האבסטרקטיות המופיעות בקוד?
9. לא חובה לממש פונקציית virtual בבנים היורשים.
כן חובה לממש את כל הפונקציות האבסרקטיות בקוד.

override, overload בעניין. 10
אם כתבתי מתודה וירטואלית באבא ומימשתי בבן - האם זה override אם overload?
אם כתבתי שתי פונקציות הזהות בשמותיהם אך שונות בפרמטרים האם זה override אם overload?
אם כתבתי שתי פונקציות הזהות בשמותיהם ובפרמטרים אך שונות בטיפוס הערך המוחזר האם זה
?overload אם override
10. אם כותבים מתודה וירטואלית וממשים אותה בבן - זה נקרא override.
אם כותבים פונקציות הזהות בשמותיהם אך שונות בחתימה זה נקרא overload.
אם כותבים שתי פונקציות הזהות בשמותיהם ובפרמטרים אך שונות בטיפוס הערך המוחזר זה -overload.

11 .אם רוצים להגדיר שדה מידע במחלקה ולתת לו ערך בזמן ההגדרה שלו האם זה אפשרי עבור:
א) const
ב) readonly
ג) גם וגם
11.ג- גם וגם.

12 .אם רוצים להגדיר שדה מידע במחלקה ולתת לו ערך בבנאי, האם זה אפשרי עבור:
א) const
ב) readonly
ג) גם וגם
12. ב- readonly.

13 .מה ההבדל בין מחלקה סטטית לבין: מחלקה לא-סטטית המכילה שדות סטטים ומתודות סטטיות?
13. אי אפשר ליצור מופע ממחלקה סטטית, לעומת מחלקה רגילה שבה כן אפשר.
במחלקה לא סטטית עם שדות ומתודות סטטיות אפשר לתת הרבה מידע שאומנם אי אפשר ליצור ממנו מופע, אבל עדיין מהמחלקה עצמה כן.

14 .מתי מופעל בנאי סטטי? מה כדאי לכתוב בקוד של בנאי סטטי?
14. בנאי סטטי מופעל כל פעם לפני שיוצרים מופע ולפני שפונים לשדות הסטטים.
בקוד של בנאי סטטי כדאי לאתחל את מידע של שדות מידע סטטים.

15 .תן דוגמא ל property
15. public string name;
public string Name
{get
{name;}
set
{name =value;}
}

16 .מדוע כדאי להשתמש ב property ?מה זה חוסך? האם ניתן לעשות public get ו- private set?
16. פרופרטי מאפשר לנו להשתמש במנגנון נוח וקצת יותר משוכלל לתת ולמשוך מידע משדה מסוים.
אפשר לעשות public get ו-private set בפרופרטי כדי לאפשר לכולם למשוך מידע אבל רק למפתח להזין מידע מהשדה.

17 .אם הגדרתי property בצורה הבאה:
public string MyName { get; set; }
כיצד הדוט נט יממש את ה property" מאחורי הקלעים" (רמז: ראה ב ILDASM(
17. הפרופרטי יהיה באקינג פילד, ה-get וה-set יהיו public.

18 .האם ניתן לקחת קובץ הרצה (exe (.דוט נטי (לא מוצפן), לשנות בו את הקוד ולהרכיב אותו מחדש לקובץ
exe ?אם כן, כיצד?
18. ניתן לעשות את זה דרך ildasm.

19 .בעניין stack, queue, list, dictionary .במקרים הבאים, במה הכי כדאי להשתמש:
- אני כותב אפליקציית חייגן ואני מעוניין לשלוף את השיחות האחרונות שחוייגו - stack
- אני כותב תוכנית המטפלת בבקשות שהגיעו למערכת ואני מעוניין לשלוף את הבקשות בסדר
שהם הגיעו ולטפל בהם אחת-אחת - queue
- אני מנהל אוסף של רשומות ואני מעוניין בצורה אקראית לגשת לאיברים ספציפיים ברשימה עפ"י
מיקומם - dictionary
- אני מנהל מאגר לקוחות ואני מעוניין לשלוף לקוח לפי שם המשפחה שלו (בהנחה שאין כפילויות)
בצורה המהירה ביותר - list


20 .מדוע לדעתך שינוי מימוש אופרטור נקרא overloading operator ולא overriding operator.
20. מכיוון שאנחנו לא ממשמים בצורה ספציפית את האופרטור הקיים. אנחנו "מעמיסים" (overloading) עוד פונקציה עם אותו השם אבל פונקציונליות שונה על פונקציה קיימת.


21 .הסבר את הפונקציות הבאות במחלקת Object : מתי נשתמש בהם? מתי נעשה להם override?
ToString
GetType
Equals
GetHashCode
21.
to string - מתודה המחזריה ייצוג סטרינגי של האוביקט שלנו. נשתמש ב-override כאשר נרצה לממש משהו ספציפי בפונקציה, ולא את מה שהתוכנה נותנת לנו מראש.
gettype - מחזיר את סוג הערך המבוקש. נשתמש ב-override כאשר נרצה להחזיר ערך מסוים מהמחלקה במקום את הסוג שלה.
gethashcode - מחזיר את ה-hashcode של מה שנבקש.
equals - בודק האם שני אובייקטים הם זהים. נשתמש ב-override כאשר נרצה להשוות שני שדות מידע שאנחנו בוחרים במקום התכנה.

22 .מדוע לדעתך במחלקת Object הפונקציה ToString היא virtual בעוד הפונקציה GetType היא איננה
?virtual
22. מכיוון שכאשר אנחנו משתמשים ב-tostring יש הרבה סיבות שבגללן נרצה להחזיר ייצוג סטרינגי מסוים, שהוא בחירה שלנו, בעוד כשאין סיבה להחזיר משהו שונה מאשר הערך המבוקש ב-gettype.

23 .כדי לספק לוגיקת מיון אחת (default (למחלקה שיצרתי, איזה אינטרפייס עלי לממש?
23. icomparable 

24 .אם ארצה לספק מספר לוגיקות מיון למחלקה שלי, איזה אינטרפייס עלי לממש (בכל מחלקת לוגיקה)?
24. icomparer

25 .בעניין חריגות: האם תמיד במהלך חריגה יתבצע הקוד של ה catch .?בהנחה שקיים finally ובמהלך
catch אזרוק אקספשיין חדש שלא יתפס ויקריס את התוכנית. האם ה finally יבוצע?
25. תלוי ב-catch, אם מתבצעת חריגה מסוג אחד אבל ה-catch מיועד להתמודד עם חריגה מסוג שני, החריגה תקרה וה-catch לא יפעל.
finally תמיד מתקיים, גם את החריגה קוראת וגם אם לא.

